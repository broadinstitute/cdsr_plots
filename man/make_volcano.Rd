% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/volcano_plot.R
\name{make_volcano}
\alias{make_volcano}
\title{Make volcano plot}
\usage{
make_volcano(
  data,
  effect_var,
  p_var,
  q_var = NULL,
  q_thresh = 0.1,
  label_var = NULL,
  n_labeled = 10,
  label_size = 3,
  label_bool = NULL,
  rank_by = c("effect", "pval"),
  ggrepel_type = c("text", "label"),
  color_var = NULL,
  color_values = NULL
)
}
\arguments{
\item{data}{data frame containing stats}

\item{effect_var}{variable name for effect size (x-axis)}

\item{p_var}{p value - variable name for y-axis}

\item{q_var}{q value--when specified, defaults to highlighting points that pass q_thresh}

\item{q_thresh}{q value threshold for highlighting points}

\item{label_var}{column containing labels for data points}

\item{n_labeled}{if rank_by = 'effect', n_labeled points per side; if rank_by = 'pval', n_labeled points in total}

\item{label_size}{size of points}

\item{label_bool}{logical column indicating which points should be labeled}

\item{rank_by}{data type used to rank data points when labeling}

\item{ggrepel_type}{choose 'text' or 'label' to determine whether ggrepel's geom_text_repel or geom_label_repel should be used}

\item{color_var}{logical/categorical column for coloring points (if a factor, points will be layered according to the levels)}

\item{color_values}{vector assigning categories from color_var to custom colors}
}
\description{
Make volcano plot
}
\examples{
ceres <- taigr::load.from.taiga(data.name='avana-internal-19q1-7643', data.version=1, data.file='gene_effect')
sample_info <- taigr::load.from.taiga(data.name='avana-internal-19q1-7643', data.version=1, data.file='sample_info')

groups <- (sample_info$primary_tissue == 'skin') \%>\% magrittr::set_names(sample_info$DepMap_ID)
limma_res <- cdsr::run_lm_stats_limma(ceres[names(groups),], groups) \%>\% dplyr::arrange(desc(abs(EffectSize)))

limma_res \%>\%
    dplyr::mutate(fdr = p.adjust(p.value, method = 'fdr')) \%>\%
    cdsr::make_volcano('EffectSize', 'p.value', q_var = 'fdr')
}
